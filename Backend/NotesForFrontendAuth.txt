Make sure "firebase" is an installed dependency


Get firebaseConfig from Firebase console -> project settings -> General ->
Scroll down to Math Magicians Web App -> Click Config
Put this code where you will handle user authentication:

import { initializeApp } from 'firebase/app';
import { getAuth } from 'firebase/auth';

const firebaseConfig = {
  apiKey: "your-api-key",
  authDomain: "your-project-id.firebaseapp.com",
  projectId: "your-project-id",
  storageBucket: "your-project-id.appspot.com",
  messagingSenderId: "your-sender-id",
  appId: "your-app-id",
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const auth = getAuth(app);


Put this code where you want to handle users logging in:
import { getAuth, signInWithEmailAndPassword } from 'firebase/auth';

const auth = getAuth();

signInWithEmailAndPassword(auth, 'user@example.com', 'password123')
  .then((userCredential) => {
    // Signed in successfully
    const user = userCredential.user;
    console.log('User signed in:', user);
  })
  .catch((error) => {
    console.error('Error signing in:', error);
  });


Retrieve ID token from Firebase (token will be sent to backend):
const auth = getAuth();
auth.currentUser.getIdToken(/* forceRefresh */ true)
  .then((idToken) => {
    console.log('ID Token:', idToken);
    // Send this token in the Authorization header to your backend (code below)
  })
  .catch((error) => {
    console.error('Error fetching ID token:', error);
  });



Request to backend, send token with request because token will be authenticated
before accessing data from database:
fetch('http://localhost:3500/your-api-endpoint', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Authorization': `Bearer ${idToken}` // Send the ID token
  },
  body: JSON.stringify({ your: 'data' })
  })
  .then(response => response.json())
  .then(data => {
    console.log('Success:', data);
  })
  .catch((error) => {
    console.error('Error:', error);
  });



Code for creating a new user (don't forget to get a newly signed up user their
token so they can do stuff in the app):
import { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';

const auth = getAuth();

function signUp(email, password) {
  createUserWithEmailAndPassword(auth, email, password)
    .then((userCredential) => {
      // User created successfully
      const user = userCredential.user;
      console.log('User created:', user);
    })
    .catch((error) => {
      console.error('Error creating user:', error.message);
    });
}

// Call the signUp function with the user's email and password
signUp('newuser@example.com', 'password123');